<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>FEM on 百川的小屋</title>
        <link>https://baichuan-blog.netlify.app/categories/fem/</link>
        <description>Recent content in FEM on 百川的小屋</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>百川</copyright><atom:link href="https://baichuan-blog.netlify.app/categories/fem/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Piola Transformations</title>
        <link>https://baichuan-blog.netlify.app/p/piola-transformations/</link>
        <pubDate>Fri, 01 Aug 2025 23:03:37 +0800</pubDate>
        
        <guid>https://baichuan-blog.netlify.app/p/piola-transformations/</guid>
        <description>&lt;h2 id=&#34;piola变换&#34;&gt;Piola变换
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Lemma (Differential operators).&lt;/strong&gt;
设$v\in C^1(K)$， $\mathbf{v}\in \mathbf{C}^1(K)$，$\hat{K}$为参考单元，$\mathbf{T}_K:\hat{K}\rightarrow K$为几何映射，\(\mathbb{J}_K=\frac{\p \mathbf{T}(\mathbf{x})}{\p \mathbf{\hat{x}}}=(\p_{j} (\mathbf{T}_K)_i)\)，令$\hat{v}(\hat{x}):=v\circ \mathbf{T}(\mathbf{\hat{\mathbf{x}}})$，$\hat{\mathbf{v}}(\hat{x}):=\mathbf{v}\circ \mathbf{T}(\mathbf{\hat{\mathbf{x}}})$，则下面等式关系成立：
&lt;/p&gt;
\[\begin{aligned}
\hat\nabla\hat{v}&amp;=(\mathbb{J}_K(\hat{\mathbf{x}}))^T(\nabla v)|_{\mathbf{T}(K)(\hat{\mathbf{x}})},\\
\hat\nabla\times (\mathbb{J}_K)^T\mathbf{\hat{v}}&amp;=\mathrm{det}(\mathbb{J}_K(\hat{\mathbf{x}}))\mathbb{J}_K^{-1}(\hat{\mathbf{x}})(\nabla\times \mathbf{v})|_{\mathbf{T}_K(\mathbf{\hat{x}})},\\
\hat{\nabla}\cdot (\mathrm{det}(\mathbb{J}_K)\mathbb{J}_K^{-1}\mathbf{\hat{v}})&amp;=\mathrm{det}(\mathbb{J}_K(\hat{\mathbf{x}}))(\nabla\cdot\mathbf{v})|_{\mathbf{T}_K(\hat{\mathbf{x}})}.
\end{aligned}\]&lt;p&gt;定义&lt;strong&gt;Piola变换&lt;/strong&gt;如下：
&lt;/p&gt;
\[\begin{aligned}
&amp;\psi_K^g(v):=v\circ \mathbf{T}_K,\\
&amp;\boldsymbol{\psi}_K^c(\mathbf{v}):=\mathbb{J}_K^T(\mathbf{v}\circ\mathbf{T}_K),\\
&amp;\boldsymbol{\psi}_K^d(\mathbf{v}):=\mathrm{det}(\mathbb{J}_K)\mathbb{J}_K^{-1}(\mathbf{v}\circ\mathbf{T}_K),\\
&amp;\psi^b_K(v):=\mathrm{det}(\mathbb{J}_K)(v\circ \mathbf{T}_K).
\end{aligned}\]&lt;p&gt;
其中$\psi^g_K$为geometic mapping的拉回，$\boldsymbol{\psi}^c_K$为covariant（协变）Piola transformation，$\boldsymbol{\psi}^d_K$为contravariant（反变）Piola transformation。&lt;/p&gt;
&lt;p&gt;将前面引理的等式用Piola变换表示可得：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Corollary (Commuting properties).&lt;/strong&gt;
&lt;/p&gt;
\[\begin{aligned}\hat\nabla(\psi_K^g(v))&amp;=\boldsymbol{\psi}_K^c(\nabla v)\\
\hat\nabla\times (\boldsymbol{\psi}_K^c(\mathbf{v}))&amp;=\boldsymbol{\psi}_K^d(\nabla\times \mathbf{v})\\
\hat{\nabla}\cdot(\boldsymbol{\psi}_K^d(\mathbf{v}))&amp;=\psi_K^d(\nabla\cdot\mathbf{v})
\end{aligned}\]&lt;h2 id=&#34;法向和切向向量&#34;&gt;法向和切向向量
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Lemma (Normal and tangent).&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;法向：\[\mathbf{n}|_{K|F}(\mathbf{x})=\frac{1}{\norm{ (\mathbb{J}_K^{-T}\hat{\mathbf{n}}_{\hat{K}|\hat{F}})(\hat{\mathbf{x}})}_{l^2}}(\mathbb{J}_K^{-T}\hat{\mathbf{n}}_{\hat{K}|\hat{F}})(\hat{\mathbf{x}}).\]&lt;/li&gt;
&lt;li&gt;切向：\[\boldsymbol{\tau}_E(\mathbf{x})=\frac{1}{\norm{(\mathbb{J}_K\hat{\boldsymbol{\tau}}_{\hat{E}})(\hat{\mathbf{x}})}_{l^2}}(\mathbb{J}_K\hat{\boldsymbol{\tau}}_{\hat{E}})(\hat{\mathbf{x}}).\]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Lemma (Surface and line measure).&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;面测度：
\[\begin{aligned}&amp;\d s=|\mathrm{det}(\mathbb{J}_K)(\hat{\mathbf{x}})|\norm{ (\mathbb{J}_K^{-T}\hat{\mathbf{n}}_{\hat{K}|\hat{F}})(\hat{\mathbf{x}})}_{l^2}\d \hat s,\\
&amp;\d \hat s=|\mathrm{det}(\mathbb{J}_K^{-1})({\mathbf{x}})|\norm{ (\mathbb{J}_K^{T}{\mathbf{n}}_{{K}|{F}})({\mathbf{x}})}_{l^2}\d  s.\\
\end{aligned}\]&lt;/li&gt;
&lt;li&gt;线测度：
\[\begin{aligned}&amp;\d l=\norm{(\mathbb{J}_K\hat{\boldsymbol{\tau}_E})(\hat{\mathbf{{x}}})}_{l^2}\d \hat l,\\
 &amp;\d \hat l=\norm{(\mathbb{J}^{-1}_K{\boldsymbol{\tau}_E})({\mathbf{{x}}})}_{l^2}\d l.
 \end{aligned}\]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Lemma (Preservation of moments of normal and tangent).&lt;/strong&gt;
设$\mathbf{v}\in \mathbf{C}^0(K)$， $q\in C^0(K)$，则
&lt;/p&gt;
\[\begin{aligned}
&amp;\int_F (\mathbf{v}\cdot\mathbf{n}|_F)(\mathbf{x})q(\mathbf{x})\d s=\int_{\hat F} (\boldsymbol{\psi}^d_K(\mathbf{v})\cdot\mathbf{\hat{n}}|_{\hat F})(\mathbf{\hat{x}})\psi_K^g(q)(\mathbf{\hat{x}})\d \hat s,\\
&amp;\int_E (\mathbf{v}\cdot\cuti{n}|_{E})(\mathbf{x})q(\mathbf{x})\d s=\int_{\hat E} (\boldsymbol{\psi}^c_K(\mathbf{v})\cdot\cuti{\hat{\tau}}|_{\hat E})(\mathbf{\hat{x}})\psi_K^g(q)(\mathbf{\hat{x}})\d \hat l.
\end{aligned}
\]&lt;h2 id=&#34;参考文献&#34;&gt;参考文献
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianguoyun.com/p/DSlLaskQlsqoDRiK-IQGIAA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Finite Elements I.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>H(div) and H(curl) finite elements</title>
        <link>https://baichuan-blog.netlify.app/p/hdiv-and-hcurl-finite-elements/</link>
        <pubDate>Fri, 01 Aug 2025 16:40:59 +0800</pubDate>
        
        <guid>https://baichuan-blog.netlify.app/p/hdiv-and-hcurl-finite-elements/</guid>
        <description>&lt;h2 id=&#34;hdiv-finite-elements&#34;&gt;H(div) finite elements
&lt;/h2&gt;&lt;h3 id=&#34;raviart-thomas-finite-elements&#34;&gt;Raviart-Thomas finite elements
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;多项式空间：\(\mathbb{RT}_{k,d} := \mathbf{P}_{k,d}\oplus \mathbf{x}\mathrm{P}^H_{k,d}\subset \mathbf{P}_{k+1,d}\)，&lt;/p&gt;
&lt;p&gt;其中$\mathrm{P}^H_{k,d}$是$d$元齐次多项式全体，\(\mathrm{dim}(\mathrm{P}^H_{k,d})=\begin{pmatrix}k+d-1\\ d-1\end{pmatrix}\)，\(\mathrm{dim}(\mathrm{P}_{k,d})=\begin{pmatrix}k+d\\d\end{pmatrix}\)（由组合技巧隔板法易证）。&lt;/p&gt;
\[\begin{aligned}\mathrm{dim}\mathbb{RT}_{k,d}
	=&amp;d\cdot\mathrm{dim}(\mathrm{P}_{k,d})+\mathrm{dim}(\mathrm{P}^H_{k,d})\\
	=&amp;\frac{d(k+d)!}{k!d!}+\begin{pmatrix}k+d-1\\ k\end{pmatrix}\\
	=&amp;(k+d+1)\begin{pmatrix}k+d-1\\ k\end{pmatrix}=(k+d+1)\begin{pmatrix}k+d-1\\ d-1\end{pmatrix}.
	\end{aligned}\]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自由度：$\forall\mathbf{v}\in \mathbb{RT}_{k,d} $，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;face：\(\sigma_{F,j}(\mathbf{v})=\int_F\mathbf{v}\cdot \mathbf{n}_{F}q_j\d s,\quad \forall F\in\mathcal{F}_K,\  q_j\in \mathrm{P}_{k,d-1}.\)&lt;/li&gt;
&lt;li&gt;cell：\(\sigma_{K,i,j}(\mathbf{v})=\int_K\mathbf{v}\cdot \mathbf{n}_{F_i}\psi_j\d \cuti{x},\quad \forall i\in\{1,\cdots,d\},\  \psi_j\in \mathrm{P}_{k-1,d}.\)&lt;/li&gt;
&lt;/ul&gt;
\[\begin{aligned}&amp;\mathrm{card}\{\sigma_{F,j}\}=(d+1)\mathrm{dim}(\mathrm{P}_{k,d-1}) = (d+1)\begin{pmatrix}k+d-1\\ d-1\end{pmatrix}\\
  &amp;\mathrm{card}\{\sigma_{K,i,j}\}=d\cdot\mathrm{dim}(\mathrm{P}_{k-1,d})=k\begin{pmatrix}k+d-1\\ d-1\end{pmatrix}\\
  &amp;\mathrm{card}\{\sigma_{F,j}\}+\mathrm{card}\{\sigma_{K,i,j}\}=\mathrm{dim}\mathbb{RT}_{k,d}
  \end{aligned}
  \]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;\(\forall\mathbf{v}\in \mathbb{RT}_{k,d}\)，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;\(\nabla\cdot\mathbf{v}\in \mathrm{P}_{k,d}\)，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If \(\mathbf{v}\) is divergence-free, then \(\mathbf{v}\in \mathbf{P}_{k,d}.\)&lt;/p&gt;
\[\nabla\cdot(q(\mathbf{x})\mathbf{x}) =\nabla q(\mathbf{x})\cdot\mathbf{x}+q(\mathbf{x})\cdot d=(k+d)q(\mathbf{x}),\quad \forall q\in\mathrm{P}_{k,d}^H.\]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;brezzi-douglas-marini-elements&#34;&gt;Brezzi-Douglas-Marini elements
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;多项式空间：\(\mathbf{P}_{k,d}\subsetneq \mathbb{RT}_{k,d}\).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自由度：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;face：与\(\mathbb{RT}_{k,d}\)相同&lt;/li&gt;
&lt;li&gt;cell： \(\sigma_{K,i,j}(\mathbf{v})=\int_K\mathbf{v}\cdot\boldsymbol{\psi}_j\d \cuti{x},\quad \forall \psi_j\in \mathbb{N}_{k-2,d}.\)&lt;/li&gt;
&lt;/ul&gt;
\[\begin{aligned}
  \mathrm{card}\{\sigma_{K,i,j}\}=&amp;\mathrm{dim}(\mathbb{N}_{k-2,d})\\=&amp;\frac{((k-2)+d+1)!}{(k-2)!(d-1)!k}\\
  =&amp;(k-1)\begin{pmatrix}k+d-1\\ d\end{pmatrix}\\
  \mathrm{card}\{\sigma_{F,j}\}\ +\ &amp;  \mathrm{card}\{\sigma_{K,i,j}\}=d\begin{pmatrix}k+d\\ d\end{pmatrix}\\
  =&amp;\mathrm{dim}(\mathbf{P}_{k,d}).
  \end{aligned}
  \]&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hcurl-finite-elements&#34;&gt;H(curl) finite elements
&lt;/h2&gt;&lt;h3 id=&#34;nedelec-finite-elements&#34;&gt;Nédélec finite elements
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;多项式空间：\(\mathbb{N}_{k,d}=\mathbf{P}_{k,d}\oplus \mathbb{S}_{k+1,d}\subset\mathbf{P}_{k+2,d}\)，&lt;/p&gt;
&lt;p&gt;其中\(\mathbb{S}_{k+1,d}:=\{\mathbf{q}\in\mathbf{P}^H_{k+1,d}:\mathbf{q}(\mathbf{x})\cdot\mathbf{x}=0\}\)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;\(\phi:\mathbf{P}^H_{k,d}\rightarrow \mathrm{P}^H_{k+1,d},\mathbf{q}\mapsto \mathbf{x}\cdot \mathbf{q}(\mathbf{x})\)是满射。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
\[\begin{aligned}
	\mathrm{dim}(\mathbb{S}_{k,d})&amp; =\mathrm{dim}(\mathrm{ker}(\phi))\\&amp;= \mathrm{dim}(\mathbf{P}^H_{k,d})-\mathrm{dim(Im}(\phi))\\
	&amp;=d\frac{(k+d-1)!}{k!(d-1)!}-\frac{(k+d)!}{(k+1)!(d-1)!}\\
	&amp; = k\frac{(k+d-1)!}{(k+1)!(d-2)!}\end{aligned}\]&lt;/li&gt;
&lt;li&gt;
\[\begin{aligned}\mathrm{dim}(\mathbb{N}_{k,d})&amp;=d\frac{(k+d)!}{k!d!}+(k+1)\frac{(k+d)!}{(k+2)!(d-2)!}\\&amp;=\frac{(k+d+1)!}{k!(d-1)!(k+2)}\end{aligned}\]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自由度：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$d=2$，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;edge：\(\sigma_{E,j}(\mathbf{v})=\int_{E}\mathbf{v}\cdot\mathbf{t}_E q_j \d l,\quad \forall E\in\mathcal{E}_K,\ q_j\in \mathrm{P}_{k,1}\)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cell：\(\sigma_{K,i,j}(\mathbf{v})=\int_{F}\mathbf{v}\cdot\mathbf{t}_{K,i} \psi_j \d \mathbf{x},\quad \forall i=1,2, \ \psi_j\in \mathrm{P}_{k-1,2}\)
&lt;/p&gt;
\[\begin{aligned}&amp;\mathrm{card}\{\sigma_{E,j}\}+\mathrm{card}\{\sigma_{E,j}\}\\=&amp;3(k+1)+2\frac{(k+1)k}{2}\\
  =&amp;(k+1)(k+3)\\
  =&amp;\mathrm{dim}(\mathbb{N}_{k,d})\end{aligned}\]&lt;p&gt;\(\mathbb{N}_{k,2}=R_{\frac{\pi}{2}}(\mathbb{RT}_{k,2})\)，即R-T元的旋转。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$d=3$，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;edge：\(\sigma_{E,j}(\mathbf{v})=\int_{E}\mathbf{v}\cdot\mathbf{t}_E q_j \d l,\quad \forall E\in\mathcal{E}_K,\ q_j\in \mathrm{P}_{k,1}\)&lt;/li&gt;
&lt;li&gt;face：\(\sigma_{F,i,j}(\mathbf{v})=\int_{F}\mathbf{v}\cdot\mathbf{t}_{K,i} \psi_j \d s,\quad \forall i=1,2,\  \psi_j\in \mathrm{P}_{k-1,2}\)&lt;/li&gt;
&lt;li&gt;cell：\(\sigma_{K,i,j}(\mathbf{v})=\int_{F}\mathbf{v}\cdot\mathbf{t}_{K,i} \varphi_j \d \mathbf{x},\quad \forall i=1,2,3,\  \varphi_j\in \mathrm{P}_{k-2,3}\)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;\(\forall \mathbf{v}\in\mathbb{N}_{k,d}\)，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$\nabla\times \mathbf{v}\in\mathbf{P}_{k,d}$，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If \(\mathbf{v}\) is curl-free, then there exits $q\in\mathrm{P}_{k+1,d}$ such that \(\mathbf{v}=\nabla q\) and \(\mathbf{v}\in\mathbf{P}_{k,d}\).&lt;/p&gt;
&lt;p&gt;无旋场是有势场，$q(\mathbf{x})=\int_{\mathbf{x}_0}^{\mathbf{x}}\mathbf{v}\cdot\mathbf{t}\d l$，参见浅水方程笔记中的场论一节[2]。因此$q$仍是多项式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianguoyun.com/p/DSlLaskQlsqoDRiK-IQGIAA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Finite Elements I. Ch 14-15.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianguoyun.com/p/DfD8y2cQ_6nhCxik94QGIAA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shallow Water. Section 1 场论.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Wachspress Coordinates</title>
        <link>https://baichuan-blog.netlify.app/p/wachspress-coordinates/</link>
        <pubDate>Fri, 20 Jun 2025 10:56:39 +0800</pubDate>
        
        <guid>https://baichuan-blog.netlify.app/p/wachspress-coordinates/</guid>
        <description>&lt;h2 id=&#34;wachspress-coordinates&#34;&gt;Wachspress coordinates
&lt;/h2&gt;&lt;div style=&#34;text-align:center;&#34;&gt;
  &lt;img src=&#34;wachspress.png&#34; alt=&#34;alt text&#34; width=&#34;500&#34;/&gt;
&lt;/div&gt;
&lt;p&gt;对于三角形上的任何一个点，我们可以使用三个顶点的凸组合唯一表示该点，即重心坐标。但是对于凸多边形（如矩形）而言，一般情况下凸组合并不唯一。例如图中的点$v$，既在$\triangle v_1v_{i-1}v_i$内部，也在$\triangle v_{i-1}v_iv_{i+1}$内部，因此既可以用点$v_0,v_{i-1},v_i$的凸组合，也可以用点$v_{i-1},v_i,v_{i+1}$的凸组合表示。&lt;/p&gt;
&lt;p&gt;下面将介绍一种凸多边形内点的坐标表示：Wachspress coordinates。&lt;/p&gt;
&lt;p&gt;首先定义$\triangle v_{i-1}v_iv_{i+1}$面积为：
&lt;/p&gt;
\[A_i=Area(\triangle v_{i-1}v_iv_{i+1})\]&lt;p&gt;
定义以$vv_i$为公共边的两个相邻三角形面积分别为：
&lt;/p&gt;
\[D_{i-1} = Area(\triangle vv_{i-1}v_i),\quad D_{i}= Area(\triangle vv_{i}v_{i+1})\]&lt;p&gt;
构造权函数：
&lt;/p&gt;
\[w_i = \frac{A_i}{D_{i-1}D_i}\]&lt;p&gt;
$w_i$衡量了衡量点$v$靠近点$v_i$的程度：当$v$往$v_i$靠近时，$D_{i-1}D_i$减小（不严格），$w_i$变大；反之，当$v$远离$v_i$时，$w_i$减小。&lt;/p&gt;
&lt;p&gt;最后对$w_i$进行归一化：
&lt;/p&gt;
\[\lambda_i = \frac{w_i}{\sum_{i=1}^N w_i},\quad i=1,\cdots N\]&lt;p&gt;
由于$\lambda_i\ge0$且$\sum_{i=1}^N \lambda_i = 1$，因此${\lambda_i}_{i=1}^N$构成了一组凸组合系数，称为Wachspress coordinates。&lt;/p&gt;
&lt;p&gt;当$v$恰好为某个顶点，如$v_j$时，$\lambda_i=\delta_{ij}$。 此时$\sum_{i=1}^N\lambda_iv_i = v_j=v$。&lt;/p&gt;
&lt;p&gt;下面我们证明对一般的$v$，也有：
&lt;/p&gt;
\[v = \sum_{i=1}^N\lambda_iv_i\]&lt;p&gt;由三角形上重心坐标表示，可以将点$v$表示为$v_{i-1},v_{i},v_{i+1}$的线性组合如下：
&lt;/p&gt;
\[v = \frac{D_i}{A_i}v_{i-1}+\frac{A_i-D_i-D_{i-1}}{A_i}{v_i}+\frac{D_{i-1}}{A_i}v_{i+1}\]&lt;p&gt;
于是
&lt;/p&gt;
$$
\begin{aligned}
&amp;w_i (v_i-v) = \frac{1}{D_{i-1}}(v_{i}-v_{i-1})-\frac{1}{D_i}(v_{i+1}-v_{i})\\
\implies &amp; \sum_{i=1}^Nw_i (v_i-v) = 0\\
\implies &amp; \sum_{i=1}^N \lambda_i (v_i-v) = 0\\
\implies &amp; \sum_{i=1}^N \lambda_i v_i=v
\end{aligned}
$$&lt;p&gt;综上，Wachspress coordinates满足如下性质：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非负性：$\lambda_i\ge 0,\ i=1,\cdots, N$。&lt;/li&gt;
&lt;li&gt;凸组合：$\sum_{i=1}^N \lambda_i = 1$。&lt;/li&gt;
&lt;li&gt;精确插值性：$v = \sum_{i=1}^{N}\lambda_i(v)v_i$。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;凸多边形上的插值&#34;&gt;凸多边形上的插值
&lt;/h2&gt;&lt;p&gt;在实际应用，我们经常面临这样的问题：已知函数在单元（三角形、四边形等）顶点的取值，希望估计其在单元内某一点处函数值，即利用顶点值插值得到内部点函数值。假设函数$f$在顶点$v_i$处取值为$f_i$，利用上面的Wachspress coordinates，我们可以定义在点$v$处插值：
&lt;/p&gt;
\[\mathbb{I}_f(v): = \sum_{i=1}^N\lambda_i(v)f_i\]&lt;ul&gt;
&lt;li&gt;当$f$是线性多项式时，
\[f(v) = f(\sum_{i=1}^N \lambda_iv_i )=\sum_{i=1}^N\lambda_i(v)f_i =\mathbb{I}_f(v)\]
即$f = \mathbb{I}_f$。&lt;/li&gt;
&lt;li&gt;当$f$为一般光滑函数时，对$f$进行一阶Taylor展开：$f = P_1(f)+O(h^2)$，$h$为单元直径。于是，
$$\begin{aligned}\mathbb{I}_f(v) &amp;= \sum_{i=1}^N\lambda_i f_i \\
  &amp;= \sum_i \lambda_iP_1(f)(v_i)+O(h^2) \\
  &amp; = P_1(f)(v)+O(h^2)\quad (P_1\text{是线性函数})\\
  &amp; = f(v)+O(h^2)
  \end{aligned}$$
即$\norm{f-\mathbb{I}_f}=O(h^2)$，更具体地，有$\norm{f-\mathbb{I}_f}\le C\norm{D^2f}h^2$。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianguoyun.com/p/DVEHkT4QlsqoDRjQkv8FIAA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Wachspress and mean value coordinates&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>MFEM</title>
        <link>https://baichuan-blog.netlify.app/p/mfem/</link>
        <pubDate>Sat, 14 Jun 2025 08:38:56 +0800</pubDate>
        
        <guid>https://baichuan-blog.netlify.app/p/mfem/</guid>
        <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Assemble bilinear form and get HypreParMatrix&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ParBilinearForm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ParBilinearForm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;AddDomainIntegrator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ConvectionIntegrator&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;velocity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Assemble the matrix in parallel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Assemble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Finalize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;HypreParMatrix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ParallelAssemble&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mfem.org/autodiff/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Automatic Differetiation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mfem.org/howto/nav-mesh-connectivity/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mesh connectivity&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Mesh Method&lt;/th&gt;
          &lt;th&gt;Dimension&lt;/th&gt;
          &lt;th&gt;Mesh object owns data&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;const Table &amp;amp;ElementToElementTable()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;1D, 2D, 3D&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;const Table &amp;amp;ElementToFaceTable()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;1D, 2D, 3D&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;const Table &amp;amp;ElementToEdgeTable()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;1D, 2D, 3D&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Table *GetFaceEdgeTable()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;3D&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Table *GetEdgeVertexTable()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;1D, 2D, 3D&lt;/td&gt;
          &lt;td&gt;Yes&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Table *GetVertexToElementTable()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;1D, 2D, 3D&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;Table *GetFaceToElementTable()&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;1D, 2D, 3D&lt;/td&gt;
          &lt;td&gt;No&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;遍历每个单元，并对各边做处理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elem_edge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ElementToEdgeTable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_elems&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetNE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elem_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_elems&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elem_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_edges&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elem_edge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RowSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elem_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edges&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;elem_edge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetRow&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elem_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edgei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edgei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edgei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edge_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edgei&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;			&lt;span class=&#34;p&#34;&gt;....&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Do&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;something&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edge&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;....&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;上面表格中并没有提供&lt;code&gt;edge2face&lt;/code&gt;连接关系，但可以利用&lt;code&gt;Transpose&lt;/code&gt;方法得到：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;face_edge&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetFaceEdgeTable&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Table&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edge_face&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;Transpose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;face_edge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edge_face&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_edges&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetNEdges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edge_id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ei&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_edges&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;edge_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;		&lt;span class=&#34;p&#34;&gt;....&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://mfem.org/howto/element-local-global-numbering/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Local index and global index&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;功能&lt;/th&gt;
          &lt;th&gt;代码&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;局部单元数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;Mesh::GetNE()&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;全局单元数&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;ParMesh::GetGlobalNE()&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;全局编号&lt;/td&gt;
          &lt;td&gt;局部编号+该进程的&lt;code&gt;offset&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;给定局部编号，返回全局编号&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;ParMesh::GetGlobalElementNum(local_element_num)&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;给定全局单元编号，返回其在当前进程上局部编号&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;ParMesh::GetLocalElementNum(global_element_num)&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;获取局部单元的全局编号列表&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;ParMesh::GetGlobalElementIndices&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;单元编号有全局和局部编号，但在MFEM的&lt;code&gt;Mesh&lt;/code&gt;类中其他网格实体只有局部编号，为了使用全局编号可用&lt;code&gt;ParMesh&lt;/code&gt;类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GetGlobalVertexIndices&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GetGlobalEdgeIndices&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GetGlobalFaceIndices&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.mfem.org/html/classmfem_1_1HypreParMatrix.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HypreParMatrix&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FiniteElementSpace::GetElementVDofs&lt;/code&gt;在&lt;code&gt;vdim=1&lt;/code&gt;时与&lt;code&gt;FiniteElementSpace::GetElementDofs&lt;/code&gt;效果似乎是一致的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算各进程单元偏移量：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;local_ne&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pmesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetNE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_procs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;MPI_Comm_size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pmesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetComm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_procs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;MPI_Comm_rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pmesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetComm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all_ne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_procs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;MPI_Allgather&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;local_ne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MPI_INT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all_ne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MPI_INT&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pmesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetComm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vector&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num_procs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num_procs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;n&#34;&gt;offsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;offsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;all_ne&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;计算各进程自由度偏移量：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;HYPRE_BigInt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dof_offsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;dof_offsets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetTrueDofOffsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rank:%d, dof:[%lld,%lld)&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dof_offsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dof_offsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;其中&lt;code&gt;dof_offsets[0]&lt;/code&gt;是当前进程的偏移量，&lt;code&gt;dof_offsets[1]&lt;/code&gt;是下一进程的偏移量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;获取全局自由度数目：&lt;code&gt;int global_dof_num = fespace-&amp;gt;GlobalTrueVSize();&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打印当前进程&lt;code&gt;tdof&lt;/code&gt;数目和&lt;code&gt;ldof&lt;/code&gt;数目(包含与其他进程公共的自由度)，并转化为全局唯一&lt;code&gt;tdofs&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rank: %d, vdofs:%d, tdofs:%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetVSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetTrueVSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;Array&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_index_of_ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_index_of_tdofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetVSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetVDofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;global_index_of_ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetVSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  	&lt;span class=&#34;n&#34;&gt;global_index_of_ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetGlobalTDofNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rank: %d, ldofs size: %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_index_of_ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_index_of_ldofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;global_index_of_tdofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SetSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetTrueVSize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_index_of_tdofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  	&lt;span class=&#34;n&#34;&gt;global_index_of_tdofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetGlobalTDofNumber&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;rank: %d, tdofs size: %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;global_index_of_tdofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;());&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;global_index_of_tdofs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;返回结果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rank: 1, vdofs:6, tdofs:3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rank: 1, vdofs size: &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rank: 1, tdofs size: &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rank: 0, vdofs:6, tdofs:6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rank: 0, vdofs size: &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rank: 0, tdofs size: &lt;span class=&#34;m&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>输运方程算例</title>
        <link>https://baichuan-blog.netlify.app/p/%E8%BE%93%E8%BF%90%E6%96%B9%E7%A8%8B%E7%AE%97%E4%BE%8B/</link>
        <pubDate>Fri, 30 May 2025 21:12:27 +0800</pubDate>
        
        <guid>https://baichuan-blog.netlify.app/p/%E8%BE%93%E8%BF%90%E6%96%B9%E7%A8%8B%E7%AE%97%E4%BE%8B/</guid>
        <description>&lt;h2 id=&#34;定常问题&#34;&gt;定常问题
&lt;/h2&gt;\[\a u+\vec{\b}\cdot \nabla u=f\]&lt;h3 id=&#34;光滑解&#34;&gt;光滑解
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$\mathrm{div}\vec{\b}=0$, 齐次边值&lt;/p&gt;
&lt;p&gt;$\Omega=[0,1]^2$, $\a=1$, $\vec{\beta} = (1,1)^T$, $f = u+(2x-1)y(y-1)+x(x-1)(2y-1)$,
&lt;/p&gt;
\[u=x(x-1)y(y-1).\]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\mathrm{div}\vec{\b}=0$, 非齐次边值&lt;/p&gt;
&lt;p&gt;$\Omega=[0,1]^2$, $\a=1$, $\vec{\beta} = (1,1)^T$, $f = u+\pi \sin(\pi (x+y))$,
&lt;/p&gt;
\[u=\sin(\pi x)\sin(\pi y)+1.\]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\mathrm{div}\vec{\b}\ne 0$&lt;/p&gt;
&lt;p&gt;$\Omega=[0,1]^2$, $\a=1$, $\vec{\beta} = \f12(x,y)^T$, $\mathrm{div}\vec{\b}=1$, $f = u+\f12\pi(x \cos(\pi x)\sin(\pi y)+y\sin(\pi x)\cos(\pi y))$,
&lt;/p&gt;
\[u=\sin(\pi x)\sin(\pi y)+1.\]&lt;p&gt;
保证$\a-\f12\mathrm{div}\vec{\beta}&amp;gt;0$.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;间断解&#34;&gt;间断解
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$\mathrm{div}\vec{\b}=0$&lt;/p&gt;
&lt;p&gt;$\Omega=[0,1]^2$, $\a=1$, $\vec{\b}=(-y,x)^T$, $f=0$,
&lt;/p&gt;
\[u=C(r)e^{-\theta},\quad C(r)=\begin{cases}1,\ r\in(0.2,0.4)\\0,\ \text{otherwise}\end{cases},\]&lt;p&gt;
其中$r=\sqrt{x^2+y^2}$, $\theta=\mathrm{arctan}(\frac{y}{x})$.&lt;/p&gt;
&lt;p&gt;构造思路: 取与$(x,y)$相容的另一组坐标对$(\theta,r)$, 使得$\vec{\b}=(\p_{\theta}x,\p_{\theta}y)^T$, 记$u=u(x,y)=\tilde{u}(\theta,r)$则
&lt;/p&gt;
$$\begin{aligned}
  &amp;0=\a u+\b\cdot \nabla u=\a u+\p_{\theta} \tilde{u}=e^{-\a\theta}\p_{\theta}(e^{\a\theta}u),\\
  \implies &amp; u=C(r)e^{-\a \theta}.\end{aligned}$$&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\mathrm{div}\vec{\b}\ne 0$&lt;/p&gt;
&lt;p&gt;$\Omega=[\f12,1]^2$, $\a=2$, $\vec{\beta}=(1,\frac{y}{x})^T$, $\mathrm{div}\vec{\b}=\f1x$, $f=0$,
&lt;/p&gt;
\[u = C(\f{y}{x})e^{-\a \theta},\quad C(r)=\begin{cases}1,\ \f{y}{x}\in(\f12,1)\\0,\ \f{y}{x}\in(1,2)\end{cases},\]&lt;p&gt;
选择参数对$(\theta=x,r=\frac{y}{x})$, 此时&lt;/p&gt;
$$\f{\p (\theta,r)}{\p (x,y)}=\begin{vmatrix}1&amp;0 \\ -\f{y}{x^2}&amp;\f1{x}\end{vmatrix}\ne0.$$&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;非定常问题&#34;&gt;非定常问题
&lt;/h2&gt;\[\p_t u+\vec{\beta}\cdot\nabla u  = 0,\quad u(\mathbf{x},0)=u_0(\mathbf{x})\]&lt;p&gt;
下面两个算例来自&lt;a class=&#34;link&#34; href=&#34;https://www.jianguoyun.com/p/DQz4YfUQlsqoDRjk5PsFIAA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Guermond二阶保正格式&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;光滑解-1&#34;&gt;光滑解
&lt;/h3&gt;&lt;p&gt;$\Omega=[-1,1]^2$, $\vec{\b}=2\pi(-y,x)^T$,
&lt;/p&gt;
\[u_0(\mathbf{x})=\f12(1-\tanh(\f{(\mathbf{x}-\mathbf{x}_0)^2}{r_0^2}-1)),\quad r_0=0.25, \mathbf{x}_0=(0.3,0)\]&lt;p&gt;
其中$\tanh x=\f{e^{x}-e^{-x}}{e^{x}+e^{-x}}$.
&lt;img src=&#34;https://www.aitude.com/wp-content/uploads/2020/08/tanh-graph-aitude.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;图1: tanh&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;用特征线法计算精确解,
&lt;/p&gt;
\[\begin{cases}x(t)=x(0)\cos(2\pi t)-y(0)\sin(2\pi t)\\ y(t) = x(0)\sin(2\pi t)+y(0)\cos(2\pi t)\end{cases},\]&lt;p&gt;
&lt;/p&gt;
\[\begin{pmatrix}x(0)\\y(0)\end{pmatrix}=\begin{pmatrix}x\cos(2\pi t)+y\sin(2\pi t)\\ -x\sin(2\pi t)+y\cos(2\pi t)\end{pmatrix},\]&lt;p&gt;
于是
&lt;/p&gt;
\[u(t,x,y)=u_0(x\cos(2\pi t)+y\sin(2\pi t),-x\sin(2\pi t)+y\cos(2\pi t)).\]&lt;p&gt;
当$t=1$时, $u(1,x,y)=u_0(x,y)$, 解图像见图1.&lt;/p&gt;
&lt;div style=&#34;display: flex; justify-content: center; align-items: flex-start; gap: 24px; margin-bottom: 1em;&#34;&gt;
  &lt;figure style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;image.png&#34; alt=&#34;图2: smooth solution&#34; width=&#34;240&#34;/&gt;
    &lt;figcaption&gt;图2: smooth solution&lt;/figcaption&gt;
  &lt;/figure&gt;
  &lt;figure style=&#34;text-align: center;&#34;&gt;
    &lt;img src=&#34;image-1.png&#34; alt=&#34;图3: three body rotation&#34; width=&#34;240&#34;/&gt;
    &lt;figcaption&gt;图3: three body rotation&lt;/figcaption&gt;
  &lt;/figure&gt;
&lt;/div&gt;
&lt;h3 id=&#34;间断解-three-body-rotation&#34;&gt;间断解: Three body rotation
&lt;/h3&gt;&lt;p&gt;将上面光滑解算例的初值改为:
&lt;/p&gt;
$$
u_0(\mathbf{x}) = 
\begin{cases} 
1 &amp; \text{if $\|\mathbf{x} - \mathbf{x}_d\| \leq r_0$ and $(|x| \geq 0.05$ or $y \geq 0.7$),} \\
1 - \frac{\|\mathbf{x} - \mathbf{x}_c\|}{r_0} &amp; \text{if $\|\mathbf{x} - \mathbf{x}_c\| \leq r_0$}, \\
g(\|\mathbf{x} - \mathbf{x}_h\|) &amp; \text{if $\|\mathbf{x} - \mathbf{x}_h\| \leq r_0$}, \\
0 &amp; \text{otherwise},
\end{cases}
$$&lt;p&gt;
其中$r_0=0.3$, $g(r)=\f14(1+\cos(\pi\min(\f{r}{r_0},1)))$, $\mathbf{x}_d=(0,0.5)$, $\mathbf{x}_c=(0,-0.5)$, $\mathbf{x}_h=(-0.5,0)$. 解图像见图3.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>

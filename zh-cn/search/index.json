[{"content":"安装windows下包管理器Scoop\r最近一段时间用惯了linux的一些命令行操作后回到Windows总有点不适应，cmd中像是ls这样的命令无法使用。其实Windows下的Windows PowerShell可以使用不少像是ls,rm这样的指令，获得类似与linux类似的体验，由于Win11中Windows Terminal集成了Windows PowerSell，cmd等shell，功能强大且颜值高，故强烈推荐此后使用terminal。\n首先设置PowerShell执行策略使其可以执行脚本\n1 Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser 1 2 3 4 5 # 添加环境变量: scoop的安装路径 $env:SCOOP=\u0026#39;C:\\software\\Scoop\u0026#39; [Environment]::SetEnvironmentVariable(\u0026#39;SCOOP\u0026#39;, $env:SCOOP, \u0026#39;User\u0026#39;) # 安装 Invoke-Expression (New-Object System.Net.WebClient).DownloadString(\u0026#39;https://get.scoop.sh\u0026#39;) 完成后相应路径会有一个Scoop文件夹。\n若上述方法失败，可直接打开https://get.scoop.sh下载install.ps1到C:\\software\\Scoop中，然后\n1 2 3 4 5 6 # 获得脚本执行权限 Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass # 打开vpn并设置scoop代理, ip和端口号根据自己的代理设置 scoop config proxy 127.0.0.1:7890 # 执行install.ps1 .\\install.ps1 安装Hugo\r1 scoop install hugo-extendeda 创建新博客\r1 2 cd C:/mywork hugo new site myblog # myblog是自定义名称 完成后会有提示如下：\nCongratulations! Your new Hugo site was created in C:\\mywork\\myblog.\nJust a few more steps\u0026hellip;\nChange the current directory to C:\\mywork\\myblog. Create or install a theme: Create a new theme with the command \u0026ldquo;hugo new theme \u0026rdquo; Or, install a theme from https://themes.gohugo.io/ Edit hugo.toml, setting the \u0026ldquo;theme\u0026rdquo; property to the theme name. Create new content with the command \u0026ldquo;hugo new content \u0026lt;FILENAME\u0026gt;.\u0026rdquo;. Start the embedded web server with the command \u0026ldquo;hugo server \u0026ndash;buildDrafts\u0026rdquo;. See documentation at https://gohugo.io/.\ngit初始化仓库：\n1 2 cd myblog git init 撰写文章\r1 hugo new content posts/start.md content\\posts下会根据archetypes\\default.md中的模板新建一个名为start.md的文件。\n下载主题\r在Hugo Themes中挑选合适主题，这里选择PaperMod主题：\n1 2 3 4 # 为git添加代理 git config --global http.proxy http://127.0.0.1:7890 # 克隆仓库 git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 注意把代理关掉，否则会无法连接（powershell里如果使用代理，git可能需要添加代理ip和端口号）。git submodule add \u0026lt;远程仓库URL\u0026gt; [本地路径]命令用于将另一个 Git 仓库作为​​子模块（Submodule）​​添加到当前项目中。子模块允许你在一个 Git 仓库中嵌套另一个独立的 Git 仓库，同时保持两者的提交历史隔离。\n将hugo.toml重命名为hugo.yml，这是Hugo的配置文件，.yml与.toml的语法略有不同：\n1 2 3 4 baseURL : \u0026#39;https://example.org/\u0026#39; #这里改成github pages的url languageCode : \u0026#39;zh-cn\u0026#39; title : \u0026#39;百川的个人博客\u0026#39; theme : \u0026#39;PaperMod\u0026#39; 本地预览：\n1 hugo server --buildDrafts ​​默认情况下​​，Hugo ​​不会渲染​​标记为 draft: true 的草稿内容。添加--buildDrafts参数（可简写为-D）后，Hugo 会​​强制包含所有草稿内容​​，方便你在写作时预览未完成的文章。此时 会返回链接http://localhost:1313/，复制到浏览器中打开即可查看博客。\n生成静态网站：\n1 hugo -D 在myblog文件夹中将产生一个public文件夹。\n将public文件夹上传到Github上，随后打开github pages产生的页面即可到达个人博客。\n参考资料\rPaperMod官方文档\n初始化 \u0026amp; 设置 PaperMod 主题的基础功能\nPaperMod主题配置\n另一款不错的主题Stack\n","date":"2025-05-23T00:00:00Z","image":"http://localhost:1313/hugo/cover.jpg","permalink":"http://localhost:1313/hugo/zh-cn/p/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"Hugo搭建个人博客"}]
[{"content":"Stack主题参数设置 Hugo会优先从主路径文件夹读取文件，若没找到，则进入hugo.yaml设置的theme中寻找。因此，如果需要修改主题文件，请先将其从相应主题中复制到主路经相应位置再进行修改。\n绑定个人网站 hugo.yaml：\n1 baseurl: https://baichuan-sihai.github.io/hugo/ 主页右侧控件 hugo.yaml：\n1 2 3 4 5 6 7 8 9 10 11 12 13 params: widgets: homepage: - type: search - type: archives params: limit: 5 - type: categories params: limit: 10 - type: tag-cloud params: limit: 10 控制主页右端区域功能，limit是条目数。\n文章发布的时间格式 hugo.yaml：\n1 2 3 params: dateFormat: published: 2006-01-02 15:04 MST 其中MST为时区。\n允许数学公式 hugo.yaml：\n1 2 3 params: article: math: true 文章模板 archetypes/default.md：\n1 2 3 4 5 6 7 8 9 10 11 --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; description: date: {{ .Date }} image: math: license: categories: tag: weight: --- categories生成分类，在文章中会显示分类；tag生成标签，不过在文章中不会显示；weight可以设置文章权重，以达到置顶功能，weight越小越靠前（主页的menu也有weight参数，可以控制菜单顺序）\n在博客主路径下，终端输入：\n1 2 3 hugo new content/post/dir/file.md # or hugo new content/post/file.md 可依据模板生成文章的front matter。根据hugo.yaml中的dateFormat, math,license为文章生成默认值。此处即使post下没有文件夹dir也会生成，可以在文件夹中放封面图片等相关内容。\n修改文章副标题字体大小 assets/scss/partials/article.scss：\n1 2 3 4 5 6 7 8 9 .article-subtitle { font-weight: normal; color: var(--card-text-color-secondary); line-height: 1.5; margin: 0; font-size: 1.5rem; // 字体大小 @include respond(xl) { font-size: 1.5rem; //大屏(屏幕宽度达到xl)时字体大小 } 添加最后更新时间 hugo.yaml：\n1 2 3 4 5 6 7 8 params: dateFormat: published: 2006-01-02 15:04 lastUpdated: 2006-01-02 15:04 enableGitInfo: true frontmatter: lastmod: [\u0026#39;lastmod\u0026#39;, \u0026#39;:git\u0026#39;, \u0026#39;date\u0026#39;, \u0026#39;publishDate\u0026#39;] 这里2006-01-02是go语言的yyyy-mm-dd，lastmod的几个参数具体解释参见官方文档的Configure Dates。\n这时“最后更新于”显示在文末，如果想挪到前面，可将layouts\\partials\\article\\components\\footer.html的11-18行注释掉，然后将 layouts\\partials\\article\\components\\details.html的26-49行替换为：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 {{ if or (not .Date.IsZero) (.Site.Params.article.readingTime) }} \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; {{ if not .Date.IsZero }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;!-- Created Date --\u0026gt; {{- $pubdate := .PublishDate.Format \u0026#34;2006-01-02 15:04\u0026#34; }} \u0026lt;!-- Last Updated Date --\u0026gt; {{- if .Lastmod }} {{- $lastmod := .Lastmod.Format \u0026#34;2006-01-02 15:04\u0026#34; }} {{- if ne $lastmod $pubdate }} \u0026lt;span class=\u0026#34;article-time--final-update\u0026#34;\u0026gt; 最后更新于 \u0026lt;time class=\u0026#34;article-time--updated\u0026#34; datetime=\u0026#34;{{ .Lastmod }}\u0026#34; title=\u0026#34;{{ .Lastmod }}\u0026#34;\u0026gt;{{$lastmod}}\u0026lt;/time\u0026gt; \u0026lt;/span\u0026gt; {{- end }} {{- end }} {{ if .Site.Params.article.readingTime }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--reading\u0026#34;\u0026gt; {{ T \u0026#34;article.readingTime\u0026#34; .ReadingTime }} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/footer\u0026gt; {{ end }} 分类 archetypescategories.md是分类的模板：\n1 2 3 4 5 6 7 8 --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; description: image: \u0026#34;images/\u0026#34; style: background: \u0026#34;\u0026#34;#ff7f7f\u0026#34;\u0026#34; color: \u0026#34;#fff\u0026#34; --- Hugo中图片路径是按其在static文件夹下的相对路径，因此可以将用作封面的图片都放在static/images/下（这种方法本地没问题，但上传到Github后显示不出来，还是建议把图片放在md文件同级目录）。background为背景色，这里取的是浅红色；color是字体颜色，这里是白色。颜色可参考十六进制色表。\n定义新分类：\n1 hugo new categories/Markdown/_index.md 其中Mardown为新定义的分类。\n调节主页左侧各栏目顺序 在content/page中修改各栏目md文件的weight\nGithub Action自动化部署 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # 创建博客 hugo new site myblog cd myblog # 初始化仓库 git init git config user.email \u0026#34; \u0026#34; git config user.name \u0026#34; \u0026#34; # 添加远程仓库 git remote add origin git@github.com:Baichuan-Sihai/myblog.git # 重命名本地分支 git branch -M main # 将stack主题作为子模块添加 git submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/hugo-theme-stack # 将public文件夹作为子模块添加 git submodule add git@github.com:Baichuan-Sihai/hugo.git ./public # 暂存、添加提交信息并提交文件 git add . git commit -m \u0026#34;-\u0026#34; git push -u origin main 如果git submodule add时报错fatal: 'public' already exists in the index，则\n1 git rm -r --cached public 这只将public从索引删除，不会删除实际文件夹\ngit submodule add产生.gitmodules文件：\n1 2 3 4 5 6 [submodule \u0026#34;public\u0026#34;] path = public url = git@github.com:Baichuan-Sihai/hugo.git [submodule \u0026#34;themes/hugo-theme-stack\u0026#34;] path = themes/hugo-theme-stack url = https://github.com/CaiJimmy/hugo-theme-stack.git Netlify加速网站访问 Netlify 是一个现代化的 ​​静态网站托管与自动化部署平台​​，专为开发者设计，它提供全球 CDN、持续集成、无服务器函数等功能，让静态网站部署变得极其简单且高性能。 Netlify的免费基础套餐每月包含100GB流量、300分钟构建时长及 1 个并发构建队列，满足个人项目和小型站点需求。通过Github仓库导入Netlify中进行部署，我们可以获得更顺畅的访问体验。另外，git push会触发自动部署，我们可以一键实现推送仓库——构建页面——部署网站的一条龙服务。\n注意，需要将hugo.yaml中的`baseu改为netlify生成的网站：\n1 baseurl: https://baichuan-blog.netlify.app/ 参考资料 Stack主题 从Github仓库生成Github Pages 【雷】Hugo + Github免费搭建博客，并实现自动化部署 ","date":"2025-05-24T12:07:37+08:00","permalink":"https://baichuan-blog.netlify.app/p/hugo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/","title":"Hugo使用技巧"},{"content":"安装windows下包管理器Scoop 最近一段时间用惯了linux的一些命令行操作后回到Windows总有点不适应，cmd中像是ls这样的命令无法使用。其实Windows下的Windows PowerShell可以使用不少像是ls,rm这样的指令，获得类似与linux类似的体验，由于Win11中Windows Terminal集成了Windows PowerSell，cmd等shell，功能强大且颜值高，故强烈推荐此后使用terminal。\n将install.ps1下载install.ps1到C:\\software\\Scoop中，然后\n1 2 3 4 5 6 7 cd C:\\software\\Scoop # 获得脚本执行权限 Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass # 打开vpn并设置scoop代理, ip和端口号根据自己的代理设置 # scoop config proxy 127.0.0.1:7890 # 执行install.ps1 .\\install.ps1 安装Hugo 1 scoop install hugo-extended Hugo有两个版本：标准版和扩展版。使用扩展版可以：\n在处理图像时，将图像编码为WebP格式。无论您使用哪个版本，都可以解码WebP图像。 使用内置的LibSass转译器，将Sass转译为CSS。使用Dart Sass转译器时不需要扩展版。 使用hugo-theme-stack主题需要安装扩展版。\n创建新博客 1 2 cd C:\\mywork hugo new site myblog # myblog是自定义名称 完成后会有提示如下：\nCongratulations! Your new Hugo site was created in C:\\mywork\\myblog.\nJust a few more steps\u0026hellip;\nChange the current directory to C:\\mywork\\myblog. Create or install a theme: Create a new theme with the command \u0026ldquo;hugo new theme \u0026rdquo; Or, install a theme from https://themes.gohugo.io/ Edit hugo.toml, setting the \u0026ldquo;theme\u0026rdquo; property to the theme name. Create new content with the command \u0026ldquo;hugo new content \u0026lt;FILENAME\u0026gt;.\u0026rdquo;. Start the embedded web server with the command \u0026ldquo;hugo server \u0026ndash;buildDrafts\u0026rdquo;. See documentation at https://gohugo.io/.\ngit初始化仓库：\n1 2 cd myblog git init 撰写文章 1 hugo new content posts\\start.md content\\posts下会根据archetypes\\default.md中的模板新建一个名为start.md的文件。\n下载主题 在Hugo Themes中挑选合适主题，这里选择PaperMod主题：\n1 2 3 4 # 为git添加代理 git config --global http.proxy http://127.0.0.1:7890 # 克隆仓库 git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 注意把代理关掉，否则可能会无法连接（powershell里如果使用代理，git可能需要添加代理ip和端口号）。git submodule add \u0026lt;远程仓库URL\u0026gt; [本地路径]命令用于将另一个 Git 仓库作为​​子模块（Submodule）​​添加到当前项目中。子模块允许你在一个 Git 仓库中嵌套另一个独立的 Git 仓库，同时保持两者的提交历史隔离。\n将hugo.toml重命名为hugo.yml，这是Hugo的配置文件，.yml与.toml的语法略有不同：\n1 2 3 4 baseURL : \u0026#39;https://example.org/\u0026#39; #这里改成github pages的url languageCode : \u0026#39;zh-cn\u0026#39; title : \u0026#39;百川的个人博客\u0026#39; theme : \u0026#39;PaperMod\u0026#39; 本地预览：\n1 hugo server --buildDrafts ​​默认情况下​​，Hugo ​​不会渲染​​标记为 draft: true 的草稿内容。添加--buildDrafts参数（可简写为-D）后，Hugo 会​​强制包含所有草稿内容​​，方便你在写作时预览未完成的文章。此时 会返回链接http://localhost:1313/，复制到浏览器中打开即可查看博客。\n生成静态网站：\n1 hugo -D 在myblog文件夹中将产生一个public文件夹。\n将public文件夹上传到Github上，随后打开github pages产生的页面即可到达个人博客。\n参考资料 PaperMod官方文档\nPaperMod主题配置\nStack主题\n","date":"2025-05-23T23:00:00+08:00","permalink":"https://baichuan-blog.netlify.app/p/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"Hugo搭建个人博客"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","permalink":"https://baichuan-blog.netlify.app/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://baichuan-blog.netlify.app/p/math-typesetting/","title":"Math Typesetting"}]
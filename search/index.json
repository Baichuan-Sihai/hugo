[{"content":"云的运动方程 大气动力——热力学方程组（忽略分子粘性）中的运动方程： \\[\\frac{d\\cuti{V}}{dt}=-\\frac1{\\rho}\\nabla p+\\cuti{g}-2\\cuti{\\Omega}\\times \\cuti{V}\\tag{1}\\] 其中$\\cuti{g} = (0,0,-g)^T$。\n积云对流有如下特点：\n尺度小，地球旋转产生的科氏力可略去不计。 非静力平衡，垂直运动加速度$\\f{d w}{dt}$不能被忽略。 积云对流具有高度的湍流性，需要考虑湍流粘性力的作用。 结合上述几点，当云中含液态水时，运动方程(1)应改为： \\[\\frac{d\\cuti{V}}{dt}=-\\frac1{\\rho}\\nabla p+\\cuti{g}+q_w\\cuti{g}+D_{\\cuti{V}}\\] 其中$\\rho=\\rho_d+\\rho_v$是湿空气密度，$q_w$为液态水比含水量，$\\rho(1+q_w)=\\rho_d+\\rho_v+\\rho_w=\\rho_d+\\rho_v+\\rho_c+\\rho_r$是湿空气与液体水物质的总密度（若有固态水，也以同样方法处理），$D_{\\cuti{V}}=K_m\\nabla^2\\cuti{V}$为湍流粘性力。\n方程两边同时乘以$\\rho$得到： \\[\\rho\\frac{d\\cuti{V}}{dt}=-\\nabla p+\\rho\\cuti{g}+q_w\\cuti{g}+\\rho D_{\\cuti{V}}\\tag{2}\\] 将$p,\\rho,T$分裂为背景场和扰动场： $$\\begin{cases}p = p_0(z)+p',\\\\\\rho=\\rho_0(z)+\\rho',\\\\T = T_0(z)+T'\\end{cases}\\tag{3}$$ 满足静力平衡条件： \\[\\f{\\p p_0}{\\p z}=-\\rho_0g\\] 对于积云对流，扰动温度$T'$很少超过$10K$，扰动压力$p'$很少超过$10$hPa（$p_{00}=1000$hPa），故： \\[\\begin{cases}\\f{p'}{p_0}\\ll 1\\\\\\f{\\rho'}{\\rho_0}\\ll 1\\\\\\f{T'}{T_0}\\ll 1\\end{cases}\\] 将(3)代入(2)得到： \\[\\rho\\frac{d\\cuti{V}}{dt}=-\\nabla p'+\\rho'\\cuti{g}+\\rho q_w\\cuti{g}+\\rho D_{\\cuti{V}}\\tag{4}\\]湿空气的状态方程为： \\[\\begin{cases}\\theta = T(\\f{p_{00}}{p})^{\\f{R}{c_p}}\\\\ p = \\rho R T =\\rho R_d T(1+0.608q_v)\\end{cases}\\] 其中$R=(1-q_v)R_d+q_vR_v=R_d(1-q_v+q_v\\f{R_d}{R_v})\\approx R_d(1+0.608 q_v)$。\n对$p = \\rho RT$和$p_0 = \\rho_0 RT$两边同时取对数并相减得到： \\[\\ln \\f{p_0+p'}{p_0}=\\ln\\f{\\rho_0+\\rho'}{\\rho_0}+\\ln \\f{T_0+T'}{T_0}+\\ln\\f{1+0.608((q_v)_0+(q_v)')}{1+0.608(q_v)_0}\\] 于是有一阶近似： \\[\\f{p'}{p_0}\\approx \\f{\\rho'}{\\rho_0}+\\f{T'}{T_0}+0.608\\f{(q_v)'}{1+0.608(q_v)_0}\\] 由于比湿$(q_v)_0\\ll 1$，因此对上式可做近似如下： \\[\\f{p'}{p_0}\\approx \\f{\\rho'}{\\rho_0}+\\f{T'}{T_0}+0.608(q_v)'\\tag{5}\\]当数值方法中无法直接求得密度时，我们可利用(5)将$\\rho'$代入(4)中得到： \\[\\rho\\frac{d\\cuti{V}}{dt}=-\\nabla p'+\\rho_0(\\f{p'}{p_0}-\\f{T'}{T_0}-0.608(q_v)')\\cuti{g}+\\rho q_w\\cuti{g}+\\rho D_{\\cuti{V}}\\] 此时将其余$\\rho$用平衡解$\\rho_0$代替，可得： \\[\\frac{d\\cuti{V}}{dt}=-\\f{1}{\\rho_0}\\nabla p'+(\\f{p'}{p_0}-\\f{T'}{T_0}-0.608(q_v)')\\cuti{g}+q_w\\cuti{g} + D_{\\cuti{V}}\\quad\\tag{6}\\]不过，由于我们的数值方法可以直接计算出$\\rho$，因此直接采用方程(4)即可： \\[\\rho\\frac{d\\cuti{V}}{dt}=-\\nabla p'+\\rho'\\cuti{g}+\\rho (q_c+q_r)\\cuti{g}+\\rho D_{\\cuti{V}}\\]参考文献 大气物理学. (2023). 盛裴轩等. 13.1节 ","date":"2025-06-09T10:17:10+08:00","permalink":"https://baichuan-blog.netlify.app/p/%E7%A7%AF%E4%BA%91%E5%8A%A8%E5%8A%9B%E5%AD%A6/","title":"积云动力学"},{"content":"Linux常用命令 快捷键：\n功能 Linux PowerShell 删除光标到行首所有内容 Ctrl+U Esc 删除光标前一个词 Ctrl+W Ctrl+Backspace 删除光标后一个词 Alt+D - 光标移动到行首 Ctrl+A/Home Home 光标移动到行尾 Ctrl+E/End End 切换回上一次cd进入的目录 cd - 用pushd/popd实现目录的进出栈切换 查找某个文件：\n1 find /path/to/folder -name \u0026#34;*name*\u0026#34; 其中*是通配符，功能是找出/path/to/folder及其所有子目录中查找文件名包含“name”的文件。\n查找包含某内容的文件：\n1 grep -rl \u0026#34;something-to-find\u0026#34; /path/to/folder 其中-r表示递归查找子目录，-l表示只输出包含匹配内容的文件名。\n压缩与解压缩：\n1 2 3 4 5 6 7 8 # 打包并压缩为 tar.gz tar -czvf [*.tar.gz] /path/to/folder # 解压tar.gz文件 tar -xzvf [*.tar.gz] # 递归压缩为zip zip -r [*.zip] /path/to/folder # 解压zip文件到指定文件夹 unzip [*.zip] -d [output_dir] 其中 tar 命令参数含义如下：\nc：create，创建归档文件（archive） z：gzip，使用 gzip 压缩 v：verbose，显示详细过程 f：file，指定归档文件名 x：extract，解包（解压缩） ","date":"2025-06-08T16:47:11+08:00","permalink":"https://baichuan-blog.netlify.app/p/linux/","title":"Linux"},{"content":"集群上使用fealpy 安装 安装miniconda：\n1 2 3 4 mkdir -p ~/miniconda3 wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3 rm ~/miniconda3/miniconda.sh 激活conda（每次进入集群都需要重新激活）：\n1 source ~/miniconda3/bin/activate 新建conda环境并激活该环境：\n1 2 conda create -n fealpy python=3.12 conda activate fealpy 安装高版本的现代编译工具链（否则pip install将报错）：\n1 2 3 4 conda install -c conda-forge gcc=12 gxx=12 gfortran=12 libgcc -y # 验证gcc, g++版本 gcc -v g++ -v 安装fealpy：\n1 pip install fealpy 会将fealpy及其需要的包（如numpy，scipy,vtk等也一同安装），新安装的包在路径~/miniconda3/envs/fealpy/lib/python3.12/site-packages下，因此也可直接将fealpy等程序包直接复制到该文件夹中。\n使用 运行脚本\n","date":"2025-06-08T12:41:56+08:00","permalink":"https://baichuan-blog.netlify.app/p/fealpy/","title":"FEALPy"},{"content":"定常问题 \\[\\a u+\\vec{\\b}\\cdot \\nabla u=f\\]光滑解 $\\mathrm{div}\\vec{\\b}=0$, 齐次边值\n$\\Omega=[0,1]^2$, $\\a=1$, $\\vec{\\beta} = (1,1)^T$, $f = u+(2x-1)y(y-1)+x(x-1)(2y-1)$, \\[u=x(x-1)y(y-1).\\] $\\mathrm{div}\\vec{\\b}=0$, 非齐次边值\n$\\Omega=[0,1]^2$, $\\a=1$, $\\vec{\\beta} = (1,1)^T$, $f = u+\\pi \\sin(\\pi (x+y))$, \\[u=\\sin(\\pi x)\\sin(\\pi y)+1.\\] $\\mathrm{div}\\vec{\\b}\\ne 0$\n$\\Omega=[0,1]^2$, $\\a=1$, $\\vec{\\beta} = \\f12(x,y)^T$, $\\mathrm{div}\\vec{\\b}=1$, $f = u+\\f12\\pi(x \\cos(\\pi x)\\sin(\\pi y)+y\\sin(\\pi x)\\cos(\\pi y))$, \\[u=\\sin(\\pi x)\\sin(\\pi y)+1.\\] 保证$\\a-\\f12\\mathrm{div}\\vec{\\beta}\u0026gt;0$.\n间断解 $\\mathrm{div}\\vec{\\b}=0$\n$\\Omega=[0,1]^2$, $\\a=1$, $\\vec{\\b}=(-y,x)^T$, $f=0$, \\[u=C(r)e^{-\\theta},\\quad C(r)=\\begin{cases}1,\\ r\\in(0.2,0.4)\\\\0,\\ \\text{otherwise}\\end{cases},\\] 其中$r=\\sqrt{x^2+y^2}$, $\\theta=\\mathrm{arctan}(\\frac{y}{x})$.\n构造思路: 取与$(x,y)$相容的另一组坐标对$(\\theta,r)$, 使得$\\vec{\\b}=(\\p_{\\theta}x,\\p_{\\theta}y)^T$, 记$u=u(x,y)=\\tilde{u}(\\theta,r)$则 $$\\begin{aligned} \u00260=\\a u+\\b\\cdot \\nabla u=\\a u+\\p_{\\theta} \\tilde{u}=e^{-\\a\\theta}\\p_{\\theta}(e^{\\a\\theta}u),\\\\ \\implies \u0026 u=C(r)e^{-\\a \\theta}.\\end{aligned}$$ $\\mathrm{div}\\vec{\\b}\\ne 0$\n$\\Omega=[\\f12,1]^2$, $\\a=2$, $\\vec{\\beta}=(1,\\frac{y}{x})^T$, $\\mathrm{div}\\vec{\\b}=\\f1x$, $f=0$, \\[u = C(\\f{y}{x})e^{-\\a \\theta},\\quad C(r)=\\begin{cases}1,\\ \\f{y}{x}\\in(\\f12,1)\\\\0,\\ \\f{y}{x}\\in(1,2)\\end{cases},\\] 选择参数对$(\\theta=x,r=\\frac{y}{x})$, 此时\n$$\\f{\\p (\\theta,r)}{\\p (x,y)}=\\begin{vmatrix}1\u00260 \\\\ -\\f{y}{x^2}\u0026\\f1{x}\\end{vmatrix}\\ne0.$$ 非定常问题 \\[\\p_t u+\\vec{\\beta}\\cdot\\nabla u = 0,\\quad u(\\mathbf{x},0)=u_0(\\mathbf{x})\\] 下面两个算例来自Guermond二阶保正格式.\n光滑解 $\\Omega=[-1,1]^2$, $\\vec{\\b}=2\\pi(-y,x)^T$, \\[u_0(\\mathbf{x})=\\f12(1-\\tanh(\\f{(\\mathbf{x}-\\mathbf{x}_0)^2}{r_0^2}-1)),\\quad r_0=0.25, \\mathbf{x}_0=(0.3,0)\\] 其中$\\tanh x=\\f{e^{x}-e^{-x}}{e^{x}+e^{-x}}$. 用特征线法计算精确解, \\[\\begin{cases}x(t)=x(0)\\cos(2\\pi t)-y(0)\\sin(2\\pi t)\\\\ y(t) = x(0)\\sin(2\\pi t)+y(0)\\cos(2\\pi t)\\end{cases},\\] \\[\\begin{pmatrix}x(0)\\\\y(0)\\end{pmatrix}=\\begin{pmatrix}x\\cos(2\\pi t)+y\\sin(2\\pi t)\\\\ -x\\sin(2\\pi t)+y\\cos(2\\pi t)\\end{pmatrix},\\] 于是 \\[u(t,x,y)=u_0(x\\cos(2\\pi t)+y\\sin(2\\pi t),-x\\sin(2\\pi t)+y\\cos(2\\pi t)).\\] 当$t=1$时, $u(1,x,y)=u_0(x,y)$, 解图像见图1.\n图2: smooth solution 图3: three body rotation 间断解: Three body rotation 将上面光滑解算例的初值改为: $$ u_0(\\mathbf{x}) = \\begin{cases} 1 \u0026 \\text{if $\\|\\mathbf{x} - \\mathbf{x}_d\\| \\leq r_0$ and $(|x| \\geq 0.05$ or $y \\geq 0.7$),} \\\\ 1 - \\frac{\\|\\mathbf{x} - \\mathbf{x}_c\\|}{r_0} \u0026 \\text{if $\\|\\mathbf{x} - \\mathbf{x}_c\\| \\leq r_0$}, \\\\ g(\\|\\mathbf{x} - \\mathbf{x}_h\\|) \u0026 \\text{if $\\|\\mathbf{x} - \\mathbf{x}_h\\| \\leq r_0$}, \\\\ 0 \u0026 \\text{otherwise}, \\end{cases} $$ 其中$r_0=0.3$, $g(r)=\\f14(1+\\cos(\\pi\\min(\\f{r}{r_0},1)))$, $\\mathbf{x}_d=(0,0.5)$, $\\mathbf{x}_c=(0,-0.5)$, $\\mathbf{x}_h=(-0.5,0)$. 解图像见图3.\n","date":"2025-05-30T21:12:27+08:00","permalink":"https://baichuan-blog.netlify.app/p/%E8%BE%93%E8%BF%90%E6%96%B9%E7%A8%8B%E7%AE%97%E4%BE%8B/","title":"输运方程算例"},{"content":"本文总结了Git的常用操作：第1-5节是基础操作，包括仓库初始化、添加身份标识等，第5节的暂存-提交-推送-拉取是日常管理中使用最为频繁的命令；后面几节则是一些进阶操作，包括解决合并冲突、临时保存、处理提交历史等，以及SSH免密连接远程仓库以及不同机器间的远程传输。\n初始化及绑定远程仓库 本地从零开始构建仓库：\n1 2 3 4 # 初始化仓库 git init # 绑定远程仓库 git remote add origin [url] 其中origin是默认的远程仓库名字， [url]是远程仓库地址。 远程仓库的默认名可通过下面语句修改：\n1 git remote rename origin [newname] 另一种初始化方法是克隆现有仓库到本地：\n1 git clone [url] [name] 其中[name]是本地仓库名称（地址）。\n查看绑定的远程仓库：\n1 git remote -v 如果需要更改绑定的远程仓库：\n1 git remote set-url origin [newurl] 添加身份标识 Git每次commit会记录提交者信息，因此我们需要先配置个人信息：\n1 2 git config user.name \u0026#34;\u0026#34; git config user.email \u0026#34;\u0026#34; 默认只为当前仓库添加身份标识，若添加--global选项则可为所有仓库添加统一的个人信息。git config --list --local可以查看当前仓库配置信息。\n分支管理 1 git branch -m [old_branch] [new branch] -m参数不覆盖已有同名分支，-M参数强制重命名，将覆盖已有的同名分支。 如果是对当前分支进行重命名，可省略[old_branch]。\n在git init初始化后，初始分支名为master，建议重命名为main：\n1 git branch -m main 更多操作：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 查看本地分支 git branch # 查看远程分支 git branch -r # 新建本地分支 git branch [new_branch] # 删除本地分支 git branch -d [branch] # 新建分支并切换到该分支 git checkout -b [new_branch] # 切换到已有分支 git checkout [branch] # 删除远程分支 git push origin --delete [branch] 查看工作区和暂存区状态 1 git status 后面可以加-s（--short的缩写），用以输出更简洁、紧凑的内容，此时若显示\n1 2 3 M file1 A file2 ?? file3 表示file1被修改（modified），file2被新添加（added），file3未跟踪。\n暂存-提交-推送-拉取 这是最常用的操作：\n1 2 3 4 5 6 7 8 9 10 # 拉取远程仓库origin/main合并到当前分支 git pull origin main # 将文件添加到暂存区 git add file # 删除已暂存的所有文件 git rm -r --cached . # 提交并注释 git commit -m \u0026#34;message\u0026#34; # 将本地分支main推送到远程origin/main git push -u origin main 其中-u表示origin是main的上游。git pull origin main和git push -u origin main只需设置一次，之后可以简单使用git pull和git push，Git会默认使用此前仓库的关联方式。\n常用git add .把所有新文件及变动过的文件一次性添加到暂存区，此时为了过滤掉某些文件，可在仓库根目录新建.gitignore文件，在里面写入需要过滤的文件。\n解决合并冲突 假设现在有两个分支：main和another，将another的修改内容合并到main：\n1 2 3 4 # 切换到主分支 git checkout main # 将another合并到main git merge another 当出现冲突时，需要打开每个冲突文件处理冲突。然后再git add告诉Git冲突已解决和git commit提交结果。\n临时保存 如果存在工作未提交，git pull或者git merge会报错，此时使用git stash允许我们先将未完成的工作先临时保存而无需commit。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 临时保存已暂存(git add)文件 git stash # 临时保存除.gitignore忽略文件以外的文件 git stash -u # 临时保存所有文件(包含.gitignore忽略的文件) git stash -a # 添加描述信息 git stash save \u0026#34;描述信息\u0026#34; # 查看stash列表 git stash list # 恢复指定的stash, 1改为相应的stash编号 git stash apply stash@{1} # 删除指定的stash, 1改为相应的stash编号 git stash drop stash@{1} # 清空stash列表 git stash clear 处理提交信息 修改提交信息 1 2 3 4 # 修改commitid之后的提交信息(不包括commitid本身) git rebase -i [commitid] # 修改commitid及其后的提交信息 git rebase -i [commitid]^ 重置分支到特定提交 1 2 3 4 5 6 # 暂存区和工作目录保持不变 git reset --soft [commitid] # 暂存区重置, 工作目录不变 git reset --mixed [commitid] # 完全重置到指定提交 git reset --hard [commitid] git reset [commitid]默认采用--mixed，所谓暂存区重置是恢复快照（每次commit提交时Git都会记录下这一刻所有文件的样子），实际上从vscode的源代码管理中看暂存区是空的，工作区则仍是修改后的文件，不会被reset覆盖。该操作可用于合并提交历史。\n远程提交 1 git pull --rebase origin main 从远程仓库origin拉取分支main的最新提交，然后将本地分支的提交挪到远程的最新提交之后，这可以保持提交历史的线性，适合于个人开发或是希望获得简洁历史的协作场景。\n可以通过下面配置默置使git pull默认采用--rebase模式：\n1 git config --global pull.rebase true 如果仅希望对当前仓库生效，则去掉--global选项。\nSSH免密连接 生成密钥对：\n1 ssh-keygen -m PEM -t ed25519 -C \u0026#34;tag\u0026#34; -f ~/.ssh/key 随后按Enter键直到产生密钥。其中PEM为密钥格式，ed25519为生成密钥的算法，\u0026quot;tag\u0026quot;为密钥添加的注释、标识，~/.ssh/key为密钥的保存路径。\n查看生成的公钥并复制粘贴到远程平台：\n1 cat ~/.ssh/key.pub 设置SSH配置文件以指定连接远程平台所使用的用户名和私钥。以Github为例，在~/.ssh/config中\n1 2 3 4 5 Host github.com # 别名 HostName github.com # 远程主机名 IdentityFile ~/.ssh/github IdentitiesOnly yes # 只使用指定的IdentityFile ServerAliveInterval 60 # 保持连接，每60秒发送一次心跳 测试github是否可以连接可以使用：\n1 ssh -T git@github.com 如果是连接集群的话，还需要设置字段：\n1 2 User [user] # 集群上的个人用户名 Port [port] # 端口号 另外还需将Hostname改为要访问的ip地址，如果设置Host lssc，则每次ssh连接时只需输入命令：\n1 ssh lssc 等价于：\n1 ssh [user@]hostname -p [port] 远程传输文件 1 scp [选项] [源文件] [目标路径] 选项-r递归复制（用于复制文件夹），-P指定远程端口。\n以本地与集群lssc间文件传输为例：\n1 2 scp lssc:/home/user/file ./file scp ./file lssc:/home/user/file 参考资料 Git教程 ","date":"2025-05-27T18:46:25+08:00","permalink":"https://baichuan-blog.netlify.app/p/git/","title":"Git"},{"content":"* 的渲染 Markdown行内公式$a^*b^*$渲染会出错（两个*间会变成斜体$a^b^$），改成$a^\\*b^\\*$（$a^*b^*$），但这样在vscode中的渲染有问题，一种安全的写法是$a^\\ast b^\\ast$（$a^\\ast b^\\ast$）。\n引用自己的博客文章 [](../article-name)，其中article-name是要引用的文章名（以url中的文章名为主）。例如，引用文章Markdown Syntax Guide时为../markdown-syntax-guide，效果：Markdown Syntax Guide。\n自定义数学命令 全局定义 所有开启math=true的文章中均可使用。\n在layouts\\partials\\article\\components\\math.html中的ignoredClasses: [\u0026quot;gist\u0026quot;]前面添加：\n1 2 3 4 macros: { \u0026#34;\\\\abs\u0026#34;: \u0026#34;\\\\left| #1 \\\\right|\u0026#34;, \u0026#34;\\\\Sob\u0026#34;: \u0026#34;W^{#1,#2}(#3)\u0026#34; // 三参数：k, p, 区域 }, 效果为：\n$\\abs{x + y}$：$\\abs{x + y}$ $\\Sob{1}{2}{\\Omega}$：$\\Sob{1}{2}{\\Omega}$ $$ \\gdef\\wkp#1#2#3{W^{#1,#2}(#3)} $$局部定义 仅限于定义所在的文章从定义后到文章结束的部分。\n$$\\gdef\\wkp#1#2#3{W^{#1,#2}(#3)}$$：$\\wkp{1}{2}{\\Omega}$\n使用标题但不编号 \u0026lt;h5\u0026gt; 标题 \u0026lt;/h5\u0026gt;可以产生五级标题效果，但不会参与目录的编号。\n标题 主页菜单添加新网站 hugo.yaml：\n1 2 3 4 5 6 7 8 menu: social: - identifier: bilibili name: bilibili weight: 2 url: https://www.bilibili.com/ params: icon: bilibili 将网站icon添加到assets\\icons中，可到iconfont下载。\n","date":"2025-05-25T11:07:01+08:00","permalink":"https://baichuan-blog.netlify.app/p/hugo-markdown%E6%8A%80%E5%B7%A7/","title":"Hugo Markdown技巧"},{"content":"微物理过程参数化 本文介绍积云动力学中的水分平衡方程、位温方程以及相应的微物理参数化方法. 云内的水分包含水汽、液态水和固态水[1, Sec.13.1 p353], 本文不考虑冰相(忽略固态水), 将水汽(water vapor)、云水(cloud water)、雨水(rain water)的密度分别记为$\\rho_v,\\rho_c,\\rho_r$, 干空气密度为$\\rho$, 记水汽混合比、云水混合比、雨水混合比分别为$q_v=\\frac{\\rho_v}{\\rho},q_c=\\frac{\\rho_c}{\\rho},q_r=\\frac{\\rho_r}{\\rho}$.\n水汽、云水、雨水之间可相互转化, 记为:\n$P_1$: 水汽$\\to$云水, 水汽凝结速率; $P_2$: 云水$\\to$雨水, 包含云水自动转化速率(rain auto-conversion)$A_r$和碰并增长速率(rain accretion)$C_r$; $P_6$: 云水$\\to$水汽, 云滴蒸发速率; $P_7$: 雨水$\\to$水汽, 雨滴蒸发速率. 水汽、云水、雨水方程分别为: $$\\begin{aligned} \\frac{dq_v}{dt} \u0026 = D_{q_v}+P_6 -P_1 + P_7 \\\\ \\frac{dq_c}{dt} \u0026 = D_{q_c}-(P_6-P_1) - P_2 \\\\ \\frac{dq_r}{dt} \u0026 = D_{q_r}+\\frac{1}{\\rho}\\frac{\\partial}{\\partial z}(\\rho v_rq_r)+P_2 - P_7 \\end{aligned}$$ 水汽凝结释放潜热, 使位温升高; 云滴、雨滴蒸发吸收潜热, 使位温降低, 由此得到位温方程 $$\\frac{d\\theta}{dt} = D_\\theta-\\gamma(P_6-P_1+P_7)$$ $\\gamma =\\frac{L_v}{c_p\\Pi}$, 其中$L_v$是蒸发潜热, $c_p$是定压比热容, $\\Pi=(\\frac{p}{p_0})^{\\frac R{c_p}}$是Exner pressure(压力无量纲化).\n上面$P_i$是[1]中记号, 我们将云水转化为水汽的$P_6-P_1$合并, 其实恰好是饱和水汽混合比$q_{vs}$(即单位质量干空气所能容纳的最大饱和水汽质量)的转化速率, 即$P_6-P_7=\\frac{d q_{vs}}{dt}$, 再将$P_7$改用$E_r$(rate of rain evaporation), 则得到[2]中方程组: $$\\begin{aligned} \\frac{d\\theta}{dt} \u0026 = D_\\theta-\\gamma(\\frac{d q_{vs}}{dt}+E_r)\\\\ \\frac{dq_v}{dt} \u0026 = D_{q_v}+ \\frac{d q_{vs}}{dt}+E_r\\\\ \\frac{dq_c}{dt} \u0026 = D_{q_c}- \\frac{d q_{vs}}{dt} - A_r-C_r \\\\ \\frac{dq_r}{dt} \u0026 = D_{q_r}+\\frac{1}{\\rho}\\frac{\\partial}{\\partial z}(\\rho v_rq_r)+A_r+C_r -E_r \\end{aligned}\\tag{1} $$观察可发现: $$\\begin{aligned} \u0026\\frac{d \\theta}{dt}+\\gamma\\frac{d q_{v}}{dt} = D_{\\theta}+\\gamma D_{q_v}\\\\ \u0026\\frac{d q_v}{dt}+\\frac{d q_c}{dt} = D_{q_v}+D_{q_c} \\end{aligned}\\tag{2}$$ 事实上, 这由液态、气态水间转化容易看出.\n公式($1$)和动量方程、连续性方程组以及状态结合可得到完整大气系统. 我们采用两步方法求解该系统: 首先忽略水汽、云水、雨水间的转化(1)右端只保留$D_{(\\cdot)}$项, 将解推进一个时间步, 得到$\\rho^{n+1},\\vec{u}^{n+1}$, $\\theta^{\\ast},q_{v}^\\ast,q_c^\\ast,q_r^\\ast$; 随后利用转化速率项对$\\theta^{\\ast},q_{v}^\\ast,q_c^\\ast,q_r^\\ast$做调整得到$\\theta^{n+1},q_v^{n+1},q_c^{n+1},q_r^{n+1}$. 相当于在原来不考虑水汽情形求解完一个时间步后对解变量做后处理.\n下面推导微物理转化项的参数化方法, 由[2]有: $$\\begin{aligned} \\text{rain auto-conversion:}\\ \u0026A_r = k_1(q_c-a),\\quad k_1=10^{-3}s^{-1}, a = 10^{-3}g\\ g^{-1}\\\\ \\text{rain accretion:}\\ \u0026C_r = k_2q_cq_r^{0.875},\\quad k_2 = 2.2s^{-1}\\\\ \\text{rain evaporation:}\\ \u0026E_r = \\frac{1}{{ \\rho}} \\frac{(1 - q_v / q_{v s}) (1.6 + 124.9 ( \\rho q_r)^{0.2046})({\\rho} q_r)^{0.525}}{5.4 \\times 10^5 + 2.55 \\times 10^6 / ( {p}q_{v s})}\\\\ \\text{saturation water vapor fraction:}\\ \u0026q_{vs} = \\frac{3.8}{ {p}}\\exp(17.27\\frac{ \\Pi\\theta-273}{ \\Pi\\theta-36}),\\quad(\\text{Teten's formula})\\\\ \\text{terminal velocity of rain following:}\\ \u0026v_r=3634 (\\rho q_r)^{0.1346}(\\frac{\\rho}{\\rho_0})^{-\\frac 12}\\ [\\text{cm\\ s}^{-1}] \\end{aligned}$$ 其中$\\rho_0$是地面的基态密度. 注意此处的单位, $p$是百帕mb(millibar), $\\rho$是$g/cm^3=10^{3}kg/m^3$, $q_v,q_c,q_r$均为$g\\ g^{-1}$.\n$A_r,C_r,\\frac{1}{\\rho}\\frac{\\partial}{\\partial z}(\\rho v_r q_r)$\n$$\\begin{aligned} \u0026\\theta^{(1)}=\\theta^*\\\\ \u0026q_v^{(1)}=q_v^*\\\\ \u0026q_c^{(1)}=q_c^*-\\Delta t (A_r+C_r)\\\\ \u0026q_r^{(1)}=q_r^*+\\Delta t(\\frac{1}{\\rho}\\frac{\\partial}{\\partial z}(\\rho v_rq_r^*)+A_r+C_r ) \\end{aligned}$$ 其中$\\frac{1}{\\rho}\\frac{\\partial}{\\partial z}(\\rho v_rq_r^\\ast)$的CG或DG处理参考[5].\n$\\frac{d q_{vs}}{dt}$\n将(1)中$\\theta, q_v, q_c$中已经处理好的右端项去掉, 类似(2)得到 $$\\begin{aligned} \u0026\\frac{\\partial\\theta}{\\partial t}+\\gamma\\frac{\\partial q_v}{\\partial t}=0\\\\ \u0026\\frac{\\partial q_v}{\\partial t}+\\frac{\\partial q_c}{\\partial t}=0 \\end{aligned}$$ 于是 $$\\theta^{(2)}+\\gamma q_v^{(2)}=\\theta^{(1)}+\\gamma q_v^{(1)} \\tag{3}$$ $$q_v^{(2)}+q_c^{(2)} = q_v^{(1)}+q_c^{(1)}\\tag{4}$$利用Teten\u0026rsquo;s formula, 将$q_v$在$\\theta^*$处做一阶Taylor展开有: $$q_v^{(2)}=q_{vs}^{(2)}\\approx q_v^{(1)}(1+\\frac{4093\\Pi}{(\\Pi\\theta^{(1)}-36)^2}(\\theta^{(2)}-\\theta^{(1)}))\\tag{5}$$第一个等号是由饱和假设, 假如$q_v^{(1)} \u0026gt;q_{vs}^{(1)}$, 此时过饱和, 将会通过转换到达饱和状态[3, Appendix: Saturation Technique]. 将该式代入(3)可得: $$\\theta^{(2)} = \\theta^{(1)}+\\frac{\\gamma}{1+\\gamma q_{vs}^{(1)}\\frac{4039\\Pi}{(\\Pi\\theta^{(1)}-36)^2}}(q_v^{(1)}-q_{vs}^{(1)})$$ 将上式再代入(3)可得: $$q_v^{(2)} = q_v^{(1)}- \\frac{1}{1+\\gamma q_{vs}^{(1)}\\frac{4039\\Pi}{(\\Pi\\theta^*-36)^2}}(q_v^{(1)}-q_{vs}^{(1)})$$ 将上式代入(4)可得: $$q_c^{(2)} = q_c^{(1)}+q_v^{(1)}-q_v^{(2)}$$ 为了保证$q_c\\ge 0$, 令 $$\\begin{aligned} q_c^{(2)} \u0026= \\max(q_c^{(1)}+q_v^{(1)}-q_v^{(2)},0)\\\\ \u0026 = q_c^{(1)}+\\max(\\text{prod},-q_c^{(1)})\\\\ (\\text{prod} :\u0026=q_v^{(1)}-q_v^{(2)}=\\frac{1}{1+\\gamma q_{vs}^{(1)}\\frac{4039\\Pi}{(\\Pi\\theta^{(1)}-36)^2}}(q_v^{(1)}-q_{vs}^{(1)}) )\\end{aligned}$$ 再次利用(4)和(3)得到: $$\\begin{aligned} q_v^{(2)}\u0026=\\max(q_v^{(1)}+q_c^{(1)}-q_c^{(2)},0)\\\\ \u0026 = \\max(q_v^{(1)}-\\max(\\text{prod},-q_c^{(1)}),0)\\\\ \\theta^{(2)}\u0026 = \\theta^{(1)}+\\gamma \\max(\\text{prod},-q_c^{(1)}) \\end{aligned}$$ $E_r$\n结合$q_v,q_r$非负, 得到: $$\\begin{aligned} \u0026\\theta^{(n+1)} = \\theta^{(2)}-\\Delta t \\gamma E_r\\\\ \u0026q_v^{(n+1)}=\\max(q_v^{(2)}+\\Delta t E_r,0)\\\\ \u0026q_r^{(n+1)}=\\max(q_r^{(1)}-\\Delta t E_r,0) \\end{aligned}$$ 综上, 可将算法重新总结如下: $$ \\begin{aligned} \u0026(\\vec{A}_r)_i = \\langle k_1(q_c-a),\\varphi_i\\rangle \\\\ \u0026(\\vec{C}_r)_i = \\langle k_2q_cq_r^{0.875},\\varphi_i \\rangle \\\\ \u0026\\Pi = (\\frac{p}{p_0})^{\\frac{R}{c_p}},\\quad q_{vs} = \\frac{3.8}{ {p}}\\exp(17.27\\frac{ \\Pi\\theta-273}{ \\Pi\\theta-36}),\\quad \\gamma = \\frac{L_v}{c_p\\Pi}\\\\ \u0026v_r=3634 (\\rho q_r)^{0.1346}(\\frac{\\rho}{\\rho_0})^{-\\frac 12}\\\\ \u0026(\\overset\\longrightarrow{\\text{sed}})_i=\\sum_K\\frac{1}{\\rho_K}(\\int_{\\p K}\\rho v_r q_r\\varphi_i \\vec{n}_z\\d \\sigma -\\int_{K} \\rho v_r q_r\\p_z\\varphi_i\\d x )\\\\ \u0026(\\overset\\longrightarrow{\\text{prod}})_i=\\inn{\\frac{1}{1+\\gamma q_{vs}\\frac{4039\\Pi}{(\\Pi\\theta 36)^2}}(q_v-q_{vs})}{\\varphi_i}\\\\ \u0026(\\vec{E}_r)_i = \\inn{\\frac{1}{{ \\rho}}\\max(1 - \\f{q_v}{q_{vs}},0) \\frac{(1.6 + 124.9 ( \\rho q_r)^{0.2046})({\\rho} q_r)^{0.525}}{5.4 \\times 10^5 + 2.55 \\times 10^6 / ( {p}q_{v s})}}{\\varphi_i}\\\\ \\\\ \u0026q_c^{(1)}=q_c-\\Delta t M^{-1}(\\vec{A}_r+\\vec{C}_r)\\\\ \u0026\\theta^{n+1} =\\theta+\\gamma (\\max(M^{-1}\\overset\\longrightarrow{\\text{prod}},-q_c^{(1)})-\\D t M^{-1}\\vec{E}_r) \\\\ \u0026 q_v^{n+1} = \\max(q_v-\\max(M^{-1}\\overset\\longrightarrow{\\text{prod}},-q_c^{(1)})+\\D t M^{-1}\\vec{E}_r,0)\\\\ \u0026q_c^{n+1}=q_c^{(1)}+\\max(M^{-1}\\overset\\longrightarrow{\\text{prod}},-q_c^{(1)})\\\\ \u0026q_r^{n+1}=\\max(q_r+\\Delta t M^{-1}(\\vec{A}_r+\\vec{C}_r+\\overset\\longrightarrow{\\text{sed}}-\\vec{E}_r),0 ) \\end{aligned} $$ 其中$M$为质量矩阵, $\\varphi_i$为测试函数.\n注：在实际代码中，由于$\\rho,p$是$P_2$元, 为方便先将两者投影到$DG_1$空间.\n参考文献 大气物理学. (2023). 盛裴轩等\nThe simulation of three-dimensional convective storm dynamics. (1978). Klemp, J., Wilhelmson, R.\nA comparison between axisymmetric and slab-symmetric cumulus cloud models. (1973). Soong, S., Ogura, Y.\nIdealized global nonhydrostatic atmospheric test cases on a reduced-radius sphere. (2015). J. B. Klemp, W. C. Skamarock, S.-H. Park\nA Non-Column Based, Fully Unstructured Implementation of Kessler\u0026rsquo;s Microphysics With Warm Rain Using Continuous and Discontinuous Spectral Elements. (2023). Yassine Tissaoui, Simone Marras, etc.\n","date":"2025-05-25T09:47:13+08:00","permalink":"https://baichuan-blog.netlify.app/p/kessler-microphysical-parameterization/","title":"Kessler Microphysical Parameterization"},{"content":"Hugo搭建个人博客\nStack主题参数设置 Hugo会优先从主路径文件夹读取文件，若没找到，则进入hugo.yaml设置的theme中寻找。因此，如果需要修改主题文件，请先将其从相应主题中复制到主路经相应位置再进行修改。\n绑定个人网站 hugo.yaml：\n1 baseurl: https://baichuan-sihai.github.io/hugo/ 主页右侧控件 hugo.yaml：\n1 2 3 4 5 6 7 8 9 10 11 12 13 params: widgets: homepage: - type: search - type: archives params: limit: 5 - type: categories params: limit: 10 - type: tag-cloud params: limit: 10 控制主页右端区域功能，limit是条目数。\n文章发布的时间格式 hugo.yaml：\n1 2 3 params: dateFormat: published: 2006-01-02 15:04 MST 其中MST为时区。\n允许数学公式 hugo.yaml：\n1 2 3 params: article: math: true 文章模板 archetypes/default.md：\n1 2 3 4 5 6 7 8 9 10 11 --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; description: date: {{ .Date }} image: math: license: categories: tag: weight: --- categories生成分类，在文章中会显示分类；tag生成标签，不过在文章中不会显示；weight可以设置文章权重，以达到置顶功能，weight越小越靠前（主页的menu也有weight参数，可以控制菜单顺序）\n在博客主路径下，终端输入：\n1 2 3 hugo new content/post/dir/file.md # or hugo new content/post/file.md 可依据模板生成文章的front matter。根据hugo.yaml中的dateFormat, math,license为文章生成默认值。此处即使post下没有文件夹dir也会生成，可以在文件夹中放封面图片等相关内容。\n修改文章副标题字体大小 assets/scss/partials/article.scss：\n1 2 3 4 5 6 7 8 9 .article-subtitle { font-weight: normal; color: var(--card-text-color-secondary); line-height: 1.5; margin: 0; font-size: 1.5rem; // 字体大小 @include respond(xl) { font-size: 1.5rem; //大屏(屏幕宽度达到xl)时字体大小 } 添加最后更新时间 hugo.yaml：\n1 2 3 4 5 6 7 8 params: dateFormat: published: 2006-01-02 15:04 lastUpdated: 2006-01-02 15:04 enableGitInfo: true frontmatter: lastmod: [\u0026#39;lastmod\u0026#39;, \u0026#39;:git\u0026#39;, \u0026#39;date\u0026#39;, \u0026#39;publishDate\u0026#39;] 这里2006-01-02是go语言的yyyy-mm-dd，enableGitInfo: true后会自动用Git信息填充，lastmod的几个参数具体解释参见官方文档的Configure Dates。\n这时“最后更新于”显示在文末，如果想挪到前面，可将layouts\\partials\\article\\components\\footer.html的11-18行注释掉，然后将 layouts\\partials\\article\\components\\details.html的26-49行替换为：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 {{ if or (not .Date.IsZero) (.Site.Params.article.readingTime) }} \u0026lt;footer class=\u0026#34;article-time\u0026#34;\u0026gt; {{ if not .Date.IsZero }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;date\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--published\u0026#34;\u0026gt; {{- .Date.Format (or .Site.Params.dateFormat.published \u0026#34;Jan 02, 2006\u0026#34;) -}} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;!-- Created Date --\u0026gt; {{- $pubdate := .PublishDate.Format \u0026#34;2006-01-02 15:04\u0026#34; }} \u0026lt;!-- Last Updated Date --\u0026gt; {{- if .Lastmod }} {{- $lastmod := .Lastmod.Format \u0026#34;2006-01-02 15:04\u0026#34; }} {{- if ne $lastmod $pubdate }} \u0026lt;span class=\u0026#34;article-time--final-update\u0026#34;\u0026gt; 最后更新于 \u0026lt;time class=\u0026#34;article-time--updated\u0026#34; datetime=\u0026#34;{{ .Lastmod }}\u0026#34; title=\u0026#34;{{ .Lastmod }}\u0026#34;\u0026gt;{{$lastmod}}\u0026lt;/time\u0026gt; \u0026lt;/span\u0026gt; {{- end }} {{- end }} {{ if .Site.Params.article.readingTime }} \u0026lt;div\u0026gt; {{ partial \u0026#34;helper/icon\u0026#34; \u0026#34;clock\u0026#34; }} \u0026lt;time class=\u0026#34;article-time--reading\u0026#34;\u0026gt; {{ T \u0026#34;article.readingTime\u0026#34; .ReadingTime }} \u0026lt;/time\u0026gt; \u0026lt;/div\u0026gt; {{ end }} \u0026lt;/footer\u0026gt; {{ end }} 分类 archetypescategories.md是分类的模板：\n1 2 3 4 5 6 7 8 --- title: \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; description: image: \u0026#34;images/\u0026#34; style: background: \u0026#34;\u0026#34;#ff7f7f\u0026#34;\u0026#34; color: \u0026#34;#fff\u0026#34; --- Hugo中图片路径是按其在static文件夹下的相对路径，因此可以将用作封面的图片都放在static/images/下。background为背景色，这里取的是浅红色；color是字体颜色，这里是白色。颜色可参考十六进制色表。\n定义新分类：\n1 hugo new categories/Markdown/_index.md 其中Mardown为新定义的分类。\n调节主页左侧各栏目顺序 在content/page中修改各栏目md文件的weight\nGithub Action自动化部署 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # 创建博客 hugo new site myblog cd myblog # 初始化仓库 git init git config user.email \u0026#34; \u0026#34; git config user.name \u0026#34; \u0026#34; # 添加远程仓库 git remote add origin git@github.com:Baichuan-Sihai/myblog.git # 重命名本地分支 git branch -M main # 将stack主题作为子模块添加 git submodule add https://github.com/CaiJimmy/hugo-theme-stack.git themes/hugo-theme-stack # 将public文件夹作为子模块添加 git submodule add git@github.com:Baichuan-Sihai/hugo.git ./public # 暂存、添加提交信息并提交文件 git add . git commit -m \u0026#34;-\u0026#34; git push -u origin main 如果git submodule add时报错fatal: 'public' already exists in the index，则\n1 git rm -r --cached public 这只将public从索引删除，不会删除实际文件夹\ngit submodule add产生.gitmodules文件：\n1 2 3 4 5 6 [submodule \u0026#34;public\u0026#34;] path = public url = git@github.com:Baichuan-Sihai/hugo.git [submodule \u0026#34;themes/hugo-theme-stack\u0026#34;] path = themes/hugo-theme-stack url = https://github.com/CaiJimmy/hugo-theme-stack.git Netlify加速网站访问 Netlify 是一个现代化的 ​​静态网站托管与自动化部署平台​​，专为开发者设计，它提供全球 CDN、持续集成、无服务器函数等功能，让静态网站部署变得极其简单且高性能。 Netlify的免费基础套餐每月包含100GB流量、300分钟构建时长及 1 个并发构建队列，满足个人项目和小型站点需求。通过Github仓库导入Netlify中进行部署，我们可以获得更顺畅的访问体验。另外，git push会触发自动部署，我们可以一键实现推送仓库——构建页面——部署网站的一条龙服务。\n注意，需要将hugo.yaml中的baseurl改为netlify生成的网站：\n1 baseurl: https://baichuan-blog.netlify.app/ 参考资料 Stack主题 从Github仓库生成Github Pages 【雷】Hugo + Github免费搭建博客，并实现自动化部署 ","date":"2025-05-24T12:07:37+08:00","permalink":"https://baichuan-blog.netlify.app/p/hugo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/","title":"Hugo使用技巧"},{"content":"安装windows下包管理器Scoop 最近一段时间用惯了linux的一些命令行操作后回到Windows总有点不适应，cmd中像是ls这样的命令无法使用。其实Windows下的Windows PowerShell可以使用不少像是ls,rm这样的指令，获得类似与linux类似的体验，由于Win11中Windows Terminal集成了Windows PowerSell，cmd等shell，功能强大且颜值高，故强烈推荐此后使用terminal。\n将install.ps1下载install.ps1到C:\\software\\Scoop中，然后\n1 2 3 4 5 6 7 cd C:\\software\\Scoop # 获得脚本执行权限 Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass # 打开vpn并设置scoop代理, ip和端口号根据自己的代理设置 # scoop config proxy 127.0.0.1:7890 # 执行install.ps1 .\\install.ps1 安装Hugo 1 scoop install hugo-extended Hugo有两个版本：标准版和扩展版。使用扩展版可以：\n在处理图像时，将图像编码为WebP格式。无论您使用哪个版本，都可以解码WebP图像。 使用内置的LibSass转译器，将Sass转译为CSS。使用Dart Sass转译器时不需要扩展版。 使用hugo-theme-stack主题需要安装扩展版。\n创建新博客 1 2 cd C:\\mywork hugo new site myblog # myblog是自定义名称 完成后会有提示如下：\nCongratulations! Your new Hugo site was created in C:\\mywork\\myblog.\nJust a few more steps\u0026hellip;\nChange the current directory to C:\\mywork\\myblog. Create or install a theme: Create a new theme with the command \u0026ldquo;hugo new theme \u0026rdquo; Or, install a theme from https://themes.gohugo.io/ Edit hugo.toml, setting the \u0026ldquo;theme\u0026rdquo; property to the theme name. Create new content with the command \u0026ldquo;hugo new content \u0026lt;FILENAME\u0026gt;.\u0026rdquo;. Start the embedded web server with the command \u0026ldquo;hugo server \u0026ndash;buildDrafts\u0026rdquo;. See documentation at https://gohugo.io/.\ngit初始化仓库：\n1 2 cd myblog git init 撰写文章 1 hugo new content posts\\start.md content\\posts下会根据archetypes\\default.md中的模板新建一个名为start.md的文件。\n下载主题 在Hugo Themes中挑选合适主题，这里选择PaperMod主题：\n1 2 3 4 # 为git添加代理 git config --global http.proxy http://127.0.0.1:7890 # 克隆仓库 git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 注意把代理关掉，否则可能会无法连接（powershell里如果使用代理，git可能需要添加代理ip和端口号）。git submodule add \u0026lt;远程仓库URL\u0026gt; [本地路径]命令用于将另一个 Git 仓库作为​​子模块（Submodule）​​添加到当前项目中。子模块允许你在一个 Git 仓库中嵌套另一个独立的 Git 仓库，同时保持两者的提交历史隔离。\n将hugo.toml重命名为hugo.yml，这是Hugo的配置文件，.yml与.toml的语法略有不同：\n1 2 3 4 baseURL : \u0026#39;https://example.org/\u0026#39; #这里改成github pages的url languageCode : \u0026#39;zh-cn\u0026#39; title : \u0026#39;百川的个人博客\u0026#39; theme : \u0026#39;PaperMod\u0026#39; 本地预览：\n1 hugo server --buildDrafts ​​默认情况下​​，Hugo ​​不会渲染​​标记为 draft: true 的草稿内容。添加--buildDrafts参数（可简写为-D）后，Hugo 会​​强制包含所有草稿内容​​，方便你在写作时预览未完成的文章。此时 会返回链接http://localhost:1313/，复制到浏览器中打开即可查看博客。\n生成静态网站：\n1 hugo -D 在myblog文件夹中将产生一个public文件夹。\n将public文件夹上传到Github上，随后打开github pages产生的页面即可到达个人博客。\n参考资料 PaperMod官方文档\nPaperMod主题配置\nStack主题\n","date":"2025-05-23T23:00:00+08:00","permalink":"https://baichuan-blog.netlify.app/p/hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"Hugo搭建个人博客"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","permalink":"https://baichuan-blog.netlify.app/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://baichuan-blog.netlify.app/p/math-typesetting/","title":"Math Typesetting"}]